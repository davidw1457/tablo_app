Source: https://github.com/jessedp/tablo-api-docs/blob/main/source/index.html.md

This is a quick translation to keep track of known API calls so that I can 
integrate them as desired without needing to constantly refer to jessedp's 
documentation.

Find Devices:
https://api.tablotv.com/assocserver/getipinfo/

returns private_ip. URL for all future requests is:
http://private_ip:8885/{api_call}

Additionally, the following URL gives RO access to hard drive
http://private_ip:18080/pvr/

GET
account/subscription

server/info
    useful for validating server connection
server/capabilities
server/guide/status
server/update/info
server/harddrives
    includes free space
server/tuners

storage/info

settings/info

settings/recording_qualities
settings/recording_qualities/live
settings/recording_qualities/recording
settings/recording_qualities/{number}
    {number} comes from previous 3 calls

guide/airings?{cond}
    state=[ conflicted | scheduled ]
guide/shows?{cond}
    state=[ conflicted | scheduled ]
    qualifier=[ premiering | new | primetime ]
guide/channels?{cond}
    state=[ conflicted | scheduled ]
guide/channels/{number}
    {number} comes from previous call
guide/movies?{cond}
    state=[ conflicted | scheduled ]
    channel={number}
        {number} comes from guide/channels call
    minrating=[ 2 | 4 | 6 | 8 | 10 ]
    maxrating=[ 2 | 4 | 6 | 8 | 10 ]
    unrated[ true | false ]
guide/movies/{number}
    {number} comes from previous call
guide/series?{cond}
    state=[ conflicted | scheduled ]
    channel={number}
        {number} comes from guide/channels call
    qualifier=[ new | primetime | premiering ]
guide/series/{number}
    {number} comes from previous call
guide/series/{number}/seasons
    {number} comes from guide/series
guide/series/seasons/{number}
    {number} comes from previous call
guide/series/{number}/episodes
    {number} comes from guide/series
guide/series/episodes/{number}
    {number} comes from previous call
guide/sports?{cond}
    state=[ conflicted | scheduled ]
    channel={number}
        {number} comes from guide/channels call
guide/sports/{number}
    {number} comes from previous call
guide/sports/events/{number}
    {number} comes from guide/airings

recordings/airings
recordings/shows
recordings/channels
recordings/channels/{number}
    {number} comes from previous call
recordings/movies
recordings/movies/{number}
    {number} comes from previous call or recordings/shows
recordings/series
recordings/series/{number}
    {number} comes from previous call or recordings/shows
recordings/series/episodes/{number}
    {number} comes from recordings/airings
recordings/sports
recordings/sports/{number}
    {number} comes from previous call
recordings/sports/events/{number}
    {number} comes from recordings/airings

PATCH
guide/{type}/{number}
    {type}=[ movies/airings | series/episodes | sports/events ]
    {number} comes from guide/airings
    Data:
        "scheduled": [ true | false ]
            set/unset recording
guide/{type}/{number}
    {type}=[ movies | series | sports ]
    {number} comes from guide/shows
    Data:
        {"schedule": [ "all" | "new" | "none" ]}
            set to record all/new/no airings of item
        {
            "schedule": {
                "rule": [ "all" | "new" | "none" ]
                "channel_path" [ null | "/guide/channels/{number}" ]
                "offsets": {
                    "start": [ 0 | -120 | -300 | -600 ]
                    "end": [ 0 | 300 | 900 | 1800 | 3600 | 7200 | 10800 ]
                    "source": [ "none" | "show" ]
                }
            },
            "schedule_rule": [ "all" | "new" | "none" ],
            "keep": {
                "rule": [ "count" | "all" ]
                "count": [ null | 1 | 3 | 5 | 10 | 20 ]
            }
        }
            Defaults: {"schedule":{"channel_path":null,"offsets":{"source":"none"}}"keep":{"rule":"none","count":null}}
            Need to confirm "schedule"."rule" and "schedule_rule" options/setability
            Need to confirm "schedule"."offsets"."source" options
            "schedule"."rule" & "schedule_rule" should correspond to "schedule" in first option
            "schedule"."channel_path" limits recordings to specific channel only
            "schedule"."offsets"."start" and ."end" offset the starting and ending time by the corresponding number of seconds
            "schedule"."offsets"."source" ??? What is this?
            "keep"."rule" whether to keep all or a specific number of episodes
            "keep"."count" number of episodes to keep if rule = count
recordings/{type}/{number}
    {type}=[ series/episodes | sport/events | movies/airings ]
    {number} comes from recordings/airings call
    Data:
        {
            "watched": [ true | false ],
            "protected": [ true | false ],
            "position":  [ number ]
            "schedule": [ rule? ]
        }
        watched toggles whether a recording is marked as watched
        protected toggles whether a recording is protected from auto-deletion
        position tracks where to resume an episode from
        schedule is unclear

DELETE
recordings/{type}/{number}
    {type}=[ series/episodes | sport/events | movies/airings ]
    {number} comes from recordings/airings call

POST
batch
    Data:
        list of paths to retrieve data from (e.g. /recordings/series/episodes/2267413)
recordings/{type}/{number}/watch
    {type}=[ series/episodes | sport/events | movies/airings ]
    {number} comes from recordings/airings call
    Includes "playlist_url" which can be used to view/transcode (ffmpeg -i playlist_url outputfile.mp4)

Interesting Tablo Responses (omitting uninteresting fields):
server/info
    {
        "server_id": String     (system.serverID),
        "name": String          (system.name),
        "local_address": String (system.privateIP)
    }
server/harddrives
    [{
        "name": String,
        "size": Integer (bytes),
        "size_mib": Integer,
        "free": Integer (bytes),
        "free_mib": Integer
    }]

guide/airings
    [
        String  (path to show/movie/sport airing)
            "/guide/series/episodes/9999999"
            "/guide/movies/airings/9999999"
            "/guide/sports/events/9999999"
    ]
guide/series/episodes/9999999
    {
        "object_id": Integer (matches 9999999),
        "series_path": String ("/guide/series/8888888" where 8888888 is seriesID)
        "episode": {
            "title": String,
            "descriptions": String,
            "number": Integer,
            "season_number": Integer,
            "orig_air_date": String ("yyyy-mm-dd")
        },
        "airing_details": {
            "datetime": String ("yyyy-mm-ddThh:mmZ"),
            "duration": Integer (seconds),
            "channel_path": String ("/guide/channels/7777777" where 7777777 is channelID)
            "channel": {
                "object_id": Integer,
                "channel": {
                    "call_sign": String,
                    "major": Integer,
                    "minor": Integer,
                    "network": String
                }
            },
            "show_title": String
        },
        "schedule": {
            "state": String ("none", "scheduled", "conflicted")
        }
    }
guide/movies/airings/9999999
    {
        "object_id": Integer (matches 9999999),
        "movie_path": String ("/guide/movies/8888888" where 8888888 is movieID)
        "airing_details": {
            "datetime": String ("yyyy-mm-ddThh:mmZ"),
            "duration": Integer (seconds),
            "channel_path": String ("/guide/channels/7777777" where 7777777 is channelID)
            "channel": {
                "object_id": Integer,
                "channel": {
                    "call_sign": String,
                    "major": Integer,
                    "minor": Integer,
                    "network": String
                }
            },
            "show_title": String
        }
        "movie_airing": {
            "release_year": Integer,
            "film_rating": ???,
            "quality_rating": ???
        },
        "schedule": {
            "state": String ("none", "scheduled", "conflicted")
        }
    }
guide/sports/events/9999999
    {
        "object_id": Integer (matches 9999999),
        "sport_path": String ("/guide/sports/8888888" where 8888888 is the sportID)
        "event": {
            "title": String
            "description": String
            "season": String (e.g. "2023-2024")
            "season_type": String
            "venue": String
            "teams": [
                {
                    "name": String,
                    "team_id": Integer
                }
            ],
            "home_team_id": Integer
        },
        "airing_details": {
            "datetime": String ("yyyy-mm-ddThh:mmZ"),
            "duration": Integer (seconds),
            "channel_path": String ("/guide/channels/7777777" where 7777777 is channelID)
            "channel": {
                "object_id": Integer,
                "channel": {
                    "call_sign": String,
                    "major": Integer,
                    "minor": Integer,
                    "network": String
                }
            },
            "show_title": String
        }, 
        "schedule": {
            "state": String ("none", "scheduled", "conflicted")
        }
    }
guide/shows
    [
        String (path to overall show/movie/sport (one-to-many with airings))
            "/guide/series/9999999"
            "/guide/movies/9999999"
            "/guide/sports/9999999"
    ]
guide/series/9999999
    {
        "object_id": Integer (matches 9999999),
        "schedule": {
            "rule": String (none/new/all?)
            "channel_path": String (null/path to channel to limit recording)
        },
        "schedule_rule": String (non/new/all?)
        "series": {
            "title": String,
            "genres": [
                String
            ],
            "description": String
            "origin_air_date": String (yyyy-mm-dd),
            "episode_runtime": Integer (seconds),
            "series_rating": String
            "cast": [
                String
            ],
            "awards": [
                String
            ]
        }
        "keep": {
            "rule": String (none/all/count),
            "count": Integer
        }
    }
guide/movies/9999999
    {
        "object_id": Integer (matches 9999999),
        "movie": {
            "title": String,
            "plot": String,
            "original_runtime": Int (seconds),
            "release_year": Int
            "film_rating": String,
            "quality_rating": Int,
            "cast": [
                String
            ],
            "directors": [
                String
            ],
            "awards": [],
            "genres": [
                String
            ]
        }
        "keep": {
            "rule": (none/all/count),
            "count": Integer
        }
    }
guide/sports/9999999
    {
        "object_id": Integer (matches to 9999999),
        "schedule": {
            "rule": String (none/all/new),
            "channel_path": String (limit to channel)
        },
        "schedule_rule": String (none/all/new),
        "sport": {
            "title": String,
            "description": String,
            "genres": [
                String
            ]
        }
        "keep": {
            "rule": String (none/count),
            "count": Integer
        }
    }
guide/channels
    [
        String (path to channel)
            "/guide/channels/9999999"
    ]
guide/channels/9999999 
    {
        "object_id": Integer (matches 9999999),
        "channel": {
            "call_sign": String,
            "major": Integer,
            "minor": Integer,
            "network": String
        }
    }

recordings/airings
    [
        String (path to recording)
            "/recordings/series/episodes/9999999"
            "/recordings/movies/airings/9999999"
            "/recordings/sports/events/9999999"
    ]
recordings/series/episodes/9999999
    {
        "object_id": Integer (matches 9999999),
        "series_path": String ("/recordings/series/8888888" where 8888888 is seriesID)
        "airing_details": {
            "datetime": String ("yyyy-mm-ddThh:mmZ"),
            "duration": Integer (seconds),
            "channel_path": String ("/guide/channels/7777777" where 7777777 is channelID)
            "channel": {
                "object_id": Integer,
                "channel": {
                    "call_sign": String,
                    "major": Integer,
                    "minor": Integer,
                    "network": String
                }
            },
            "show_title": String
        },
        "video_details": {
            "state": String ("failed"/???),
            "clean": Boolean,
            "duration": Integer (seconds),
            "comskip": {
                "state": String,
                "error": String
            },
            "error": {
                "code": String,
                "details": String,
                "description": String
            },
            "warnings": [
                String
            ]
        },
        "episode": {
            "title": String,
            "descriptions": String,
            "number": Integer,
            "season_number": Integer,
            "orig_air_date": String ("yyyy-mm-dd")
        },
        "schedule": {
            "state": String ("none", "scheduled", "conflicted")
        }
    }
recordings/movies/airings/9999999
    {
        "object_id": Integer (matches 9999999),
        "movie_path": String ("/recordings/movies/8888888" where 8888888 is movieID)
        "airing_details": {
            "datetime": String ("yyyy-mm-ddThh:mmZ"),
            "duration": Integer (seconds),
            "channel_path": String ("/guide/channels/7777777" where 7777777 is channelID)
            "channel": {
                "object_id": Integer,
                "channel": {
                    "call_sign": String,
                    "major": Integer,
                    "minor": Integer,
                    "network": String
                }
            },
            "show_title": String
        }
        "movie_airing": {
            "release_year": Integer,
            "film_rating": String,
            "quality_rating": Integer
        },
        "video_details": {
            "state": String ("failed"/???),
            "clean": Boolean,
            "duration": Integer (seconds),
            "comskip": {
                "state": String,
                "error": String
            },
            "error": {
                "code": String,
                "details": String,
                "description": String
            },
            "warnings": [
                String
            ]
        }
    }
recordings/sports/events/9999999
    Unable to verify at this time. Assume it is the same as guide/sports/events/9999999 with addition of "video_details"
recordings/shows
    [
        String (path to show details)
            "recordings/series/9999999"
            "recordings/movies/9999999"
            "recordings/sports/9999999"
    ]
recordings/series/9999999
    {
        "object_id": Integer (matches 9999999),
        "series": {
            "title": String,
            "genres": [
                String
            ],
            "description": String
            "origin_air_date": String (yyyy-mm-dd),
            "episode_runtime": Integer (seconds),
            "series_rating": String
            "cast": [
                String
            ],
            "awards": [
                String
            ]
        },
        "keep": {
            "rule": String (none/all/count),
            "count": Integer
        }
    }
recordings/movies/9999999
    {
        "object_id": Integer (matches 9999999),
        "movie": {
            "title": String,
            "plot": String,
            "original_runtime": Int (seconds),
            "release_year": Int
            "film_rating": String,
            "quality_rating": String?,
            "cast": [
                String
            ]
            "directores": [
                String
            ],
            "awards": [],
            "genres": [
                String
            ]
        }
        "keep": {
            "rule": (none/all/count),
            "count": Integer
        }
    }
recordings/sports/9999999
    Unable to verify at this time. Assume is the same as guide/sports/9999999
recordings/channels
    [
        String (path to channel)
            "/recordings/channels/9999999"
    ]
recordings/channels/9999999
recordings/{type}/9999999/watch    (POST, no data, type comes from recordings/airings (e.g. series/episodes))
    {
        "playlist_url": String (used to rip/playback recording)
    }